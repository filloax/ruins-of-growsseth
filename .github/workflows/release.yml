name: Release Mod (1.21)
 
on:
  push:
    branches:
      - 'release/1.21.0'
env:
  JAVA_VERSION: 21
  MC_VER: 1.21

jobs:
  build:
    if: "contains(github.event.head_commit.message, 'chore: release') && github.event_name != 'pull_request'"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1  

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Make Gradle Wrapper Executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      
      - name: Get version from gradle
        id: get_version
        run: echo "VERSION=$(./gradlew modVersion | grep VERSION | awk -F'=' '{print $2}')" >> $GITHUB_OUTPUT
  
      - name: Build with Gradle
        run: ./gradlew build
        env:
          GROWSSETH_MUSIC_PW: ${{ secrets.MUSIC_PW }}

      - uses: Kir-Antipov/mc-publish@v3.3
        id: mc_publish
        with:
          # modrinth-token: ${{ secrets.TOKEN_MODRINTH }}

          # curseforge-token: ${{ secrets.TOKEN_CURSEFORGE }}

          github-tag: v${{ steps.get_version.outputs.VERSION }}-${{ env.MC_VER }}
          github-generate-changelog: true
          github-token: ${{ secrets.TOKEN_GITHUB }}

          name: Ruins of Growsseth ${{ steps.get_version.outputs.VERSION }} for Minecraft ${{ env.MC_VER }}
          version-type: beta
      
      - name: Get release ID
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: '${{ steps.mc_publish.outputs.github-tag }}'
            });
            return release.data.id;

      - name: Upload Asset to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.api_url }}/repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.result }}
          asset_path: ./build/egobalego-at-home/Egobalego at Home.zip
          asset_name: Egobalego at Home.zip
          asset_content_type: application/zip

      - name: Upload Asset to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.api_url }}/repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.result }}
          asset_path: ./build/datapack/Reference Datapack.zip
          asset_name: Reference Datapack.zip
          asset_content_type: application/zip
      